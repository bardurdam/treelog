Index.PACKAGES = {"scalaz" : [], "scalaz.syntax" : [], "treelog" : [{"name" : "treelog.DescribedLogTreeLabel", "shortDescription" : "", "members_case class" : [{"label" : "fold", "tail" : "(f: (DescribedLogTreeLabel[Annotation]) ⇒ T, g: (UndescribedLogTreeLabel[Annotation]) ⇒ T): T", "member" : "treelog.DescribedLogTreeLabel.fold", "link" : "treelog\/DescribedLogTreeLabel.html#fold[T](f:treelog.DescribedLogTreeLabel[Annotation]=>T,g:treelog.UndescribedLogTreeLabel[Annotation]=>T):T", "kind" : "def"}, {"member" : "treelog.DescribedLogTreeLabel#<init>", "error" : "unsupported entity"}, {"label" : "annotations", "tail" : ": Set[Annotation]", "member" : "treelog.DescribedLogTreeLabel.annotations", "link" : "treelog\/DescribedLogTreeLabel.html#annotations:Set[Annotation]", "kind" : "val"}, {"label" : "success", "tail" : ": Boolean", "member" : "treelog.DescribedLogTreeLabel.success", "link" : "treelog\/DescribedLogTreeLabel.html#success:Boolean", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "treelog.DescribedLogTreeLabel.description", "link" : "treelog\/DescribedLogTreeLabel.html#description:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "treelog\/DescribedLogTreeLabel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "treelog\/DescribedLogTreeLabel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "treelog\/DescribedLogTreeLabel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "treelog\/DescribedLogTreeLabel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "treelog\/DescribedLogTreeLabel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "treelog\/DescribedLogTreeLabel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "treelog\/DescribedLogTreeLabel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "treelog\/DescribedLogTreeLabel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "treelog\/DescribedLogTreeLabel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "treelog\/DescribedLogTreeLabel.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "treelog\/DescribedLogTreeLabel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "treelog\/DescribedLogTreeLabel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "treelog\/DescribedLogTreeLabel.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "treelog\/DescribedLogTreeLabel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "treelog\/DescribedLogTreeLabel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "treelog\/DescribedLogTreeLabel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "treelog\/DescribedLogTreeLabel.html", "kind" : "case class"}, {"name" : "treelog.LogTreeLabel", "members_trait" : [{"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "treelog\/LogTreeLabel.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "treelog\/LogTreeLabel.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "treelog\/LogTreeLabel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "treelog\/LogTreeLabel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "treelog\/LogTreeLabel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "treelog\/LogTreeLabel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "treelog\/LogTreeLabel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "treelog\/LogTreeLabel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "treelog\/LogTreeLabel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "treelog\/LogTreeLabel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "treelog\/LogTreeLabel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "treelog\/LogTreeLabel.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "treelog\/LogTreeLabel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "treelog\/LogTreeLabel.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "treelog\/LogTreeLabel.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "treelog\/LogTreeLabel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "treelog\/LogTreeLabel.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "treelog\/LogTreeLabel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "treelog\/LogTreeLabel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "treelog\/LogTreeLabel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "treelog\/LogTreeLabel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "annotations", "tail" : "(): Set[Annotation]", "member" : "treelog.LogTreeLabel.annotations", "link" : "treelog\/LogTreeLabel.html#annotations:Set[Annotation]", "kind" : "abstract def"}, {"label" : "fold", "tail" : "(f: (DescribedLogTreeLabel[Annotation]) ⇒ T, g: (UndescribedLogTreeLabel[Annotation]) ⇒ T): T", "member" : "treelog.LogTreeLabel.fold", "link" : "treelog\/LogTreeLabel.html#fold[T](f:treelog.DescribedLogTreeLabel[Annotation]=>T,g:treelog.UndescribedLogTreeLabel[Annotation]=>T):T", "kind" : "abstract def"}, {"label" : "success", "tail" : "(): Boolean", "member" : "treelog.LogTreeLabel.success", "link" : "treelog\/LogTreeLabel.html#success():Boolean", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "treelog\/LogTreeLabel.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "treelog\/LogTreeLabel.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "treelog\/LogTreeLabel.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "", "object" : "treelog\/LogTreeLabel$.html", "members_object" : [{"label" : "LogTreeLabelEqual", "tail" : "(): Equal[LogTreeLabel[A]]", "member" : "treelog.LogTreeLabel.LogTreeLabelEqual", "link" : "treelog\/LogTreeLabel$.html#LogTreeLabelEqual[A]:scalaz.Equal[treelog.LogTreeLabel[A]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "treelog\/LogTreeLabel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "treelog\/LogTreeLabel$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "treelog\/LogTreeLabel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "treelog\/LogTreeLabel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "treelog\/LogTreeLabel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "treelog\/LogTreeLabel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "treelog\/LogTreeLabel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "treelog\/LogTreeLabel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "treelog\/LogTreeLabel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "treelog\/LogTreeLabel$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "treelog\/LogTreeLabel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "treelog\/LogTreeLabel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "treelog\/LogTreeLabel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "treelog\/LogTreeLabel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "treelog\/LogTreeLabel$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "treelog\/LogTreeLabel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "treelog\/LogTreeLabel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "treelog\/LogTreeLabel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "treelog\/LogTreeLabel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "treelog\/LogTreeLabel.html", "kind" : "trait"}, {"name" : "treelog.LogTreeSyntax", "members_trait" : [{"label" : "fromSerializableForm", "tail" : "(sdc: SerializableDescribedComputation[V]): DescribedComputation[V]", "member" : "treelog.LogTreeSyntax.fromSerializableForm", "link" : "treelog\/LogTreeSyntax.html#fromSerializableForm[V](sdc:LogTreeSyntax.this.SerializableDescribedComputation[V]):LogTreeSyntax.this.DescribedComputation[V]", "kind" : "def"}, {"label" : "toSerializableForm", "tail" : "(dc: DescribedComputation[V]): SerializableDescribedComputation[V]", "member" : "treelog.LogTreeSyntax.toSerializableForm", "link" : "treelog\/LogTreeSyntax.html#toSerializableForm[V](dc:LogTreeSyntax.this.DescribedComputation[V]):LogTreeSyntax.this.SerializableDescribedComputation[V]", "kind" : "def"}, {"label" : "SerializableDescribedComputation", "tail" : "", "member" : "treelog.LogTreeSyntax.SerializableDescribedComputation", "link" : "treelog\/LogTreeSyntax.html#SerializableDescribedComputation[V]=(String\\\/V,treelog.SerializableTree[Annotation])", "kind" : "type"}, {"label" : "logTreeShow", "tail" : "(annotationShow: Show[Annotation]): Show[LogTree]", "member" : "treelog.LogTreeSyntax.logTreeShow", "link" : "treelog\/LogTreeSyntax.html#logTreeShow(implicitannotationShow:scalaz.Show[Annotation]):scalaz.Show[LogTreeSyntax.this.LogTree]", "kind" : "implicit def"}, {"label" : "LabellingSyntax", "tail" : "", "member" : "treelog.LogTreeSyntax.LabellingSyntax", "link" : "treelog\/LogTreeSyntax.html#LabellingSyntax[V]extendsAnyRef", "kind" : "implicit class"}, {"label" : "TraversableMonadSyntax", "tail" : "", "member" : "treelog.LogTreeSyntax.TraversableMonadSyntax", "link" : "treelog\/LogTreeSyntax.html#TraversableMonadSyntax[F[_],V]extendsAnyRef", "kind" : "implicit class"}, {"label" : "FoldSyntax", "tail" : "", "member" : "treelog.LogTreeSyntax.FoldSyntax", "link" : "treelog\/LogTreeSyntax.html#FoldSyntax[V]extendsAnyRef", "kind" : "implicit class"}, {"label" : "BranchLabelingSyntax", "tail" : "", "member" : "treelog.LogTreeSyntax.BranchLabelingSyntax", "link" : "treelog\/LogTreeSyntax.html#BranchLabelingSyntaxextendsAnyRef", "kind" : "implicit class"}, {"label" : "EitherSyntax", "tail" : "", "member" : "treelog.LogTreeSyntax.EitherSyntax", "link" : "treelog\/LogTreeSyntax.html#EitherSyntax[V]extendsAnyRef", "kind" : "implicit class"}, {"label" : "OptionSyntax", "tail" : "", "member" : "treelog.LogTreeSyntax.OptionSyntax", "link" : "treelog\/LogTreeSyntax.html#OptionSyntax[V]extendsAnyRef", "kind" : "implicit class"}, {"label" : "BooleanSyntax", "tail" : "", "member" : "treelog.LogTreeSyntax.BooleanSyntax", "link" : "treelog\/LogTreeSyntax.html#BooleanSyntaxextendsAnyRef", "kind" : "implicit class"}, {"label" : "AnnotationsSyntax", "tail" : "", "member" : "treelog.LogTreeSyntax.AnnotationsSyntax", "link" : "treelog\/LogTreeSyntax.html#AnnotationsSyntax[V]extendsAnyRef", "kind" : "implicit class"}, {"label" : "LeafSyntax", "tail" : "", "member" : "treelog.LogTreeSyntax.LeafSyntax", "link" : "treelog\/LogTreeSyntax.html#LeafSyntax[V]extendsAnyRef", "kind" : "implicit class"}, {"label" : "success", "tail" : "(value: V): DescribedComputation[V]", "member" : "treelog.LogTreeSyntax.success", "link" : "treelog\/LogTreeSyntax.html#success[V](value:V):LogTreeSyntax.this.DescribedComputation[V]", "kind" : "def"}, {"label" : "success", "tail" : "(value: V, description: String): DescribedComputation[V]", "member" : "treelog.LogTreeSyntax.success", "link" : "treelog\/LogTreeSyntax.html#success[V](value:V,description:String):LogTreeSyntax.this.DescribedComputation[V]", "kind" : "def"}, {"label" : "failure", "tail" : "(description: String): DescribedComputation[V]", "member" : "treelog.LogTreeSyntax.failure", "link" : "treelog\/LogTreeSyntax.html#failure[V](description:String):LogTreeSyntax.this.DescribedComputation[V]", "kind" : "def"}, {"label" : "failureLog", "tail" : "(dc: DescribedComputation[V]): DescribedComputation[V]", "member" : "treelog.LogTreeSyntax.failureLog", "link" : "treelog\/LogTreeSyntax.html#failureLog[V](dc:LogTreeSyntax.this.DescribedComputation[V]):LogTreeSyntax.this.DescribedComputation[V]", "kind" : "def"}, {"label" : "logTreeMonoid", "tail" : ": Monoid[LogTree] { val zero: LogTreeSyntax.this.LogTree }", "member" : "treelog.LogTreeSyntax.logTreeMonoid", "link" : "treelog\/LogTreeSyntax.html#logTreeMonoid:scalaz.Monoid[LogTreeSyntax.this.LogTree]{valzero:LogTreeSyntax.this.LogTree}", "kind" : "implicit val"}, {"label" : "DescribedComputation", "tail" : "", "member" : "treelog.LogTreeSyntax.DescribedComputation", "link" : "treelog\/LogTreeSyntax.html#DescribedComputation[V]=scalaz.EitherT[LogTreeSyntax.this.LogTreeWriter,String,V]", "kind" : "type"}, {"label" : "LogTreeWriter", "tail" : "", "member" : "treelog.LogTreeSyntax.LogTreeWriter", "link" : "treelog\/LogTreeSyntax.html#LogTreeWriter[V]=scalaz.Writer[LogTreeSyntax.this.LogTree,V]", "kind" : "type"}, {"label" : "LogTree", "tail" : "", "member" : "treelog.LogTreeSyntax.LogTree", "link" : "treelog\/LogTreeSyntax.html#LogTree=scalaz.Tree[treelog.LogTreeLabel[Annotation]]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "treelog\/LogTreeSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "treelog\/LogTreeSyntax.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "treelog\/LogTreeSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "treelog\/LogTreeSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "treelog\/LogTreeSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "treelog\/LogTreeSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "treelog\/LogTreeSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "treelog\/LogTreeSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "treelog\/LogTreeSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "treelog\/LogTreeSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "treelog\/LogTreeSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "treelog\/LogTreeSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "treelog\/LogTreeSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "treelog\/LogTreeSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "treelog\/LogTreeSyntax.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "treelog\/LogTreeSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "treelog\/LogTreeSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "treelog\/LogTreeSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "treelog\/LogTreeSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "See the treelog package documentation for a brief introduction to treelog and also,examples on GitHub to get started.", "trait" : "treelog\/LogTreeSyntax.html", "kind" : "trait"}, {"name" : "treelog.LogTreeSyntaxWithoutAnnotations", "shortDescription" : "", "object" : "treelog\/LogTreeSyntaxWithoutAnnotations$.html", "members_object" : [{"label" : "LabellingSyntax", "tail" : "", "member" : "treelog.LogTreeSyntax.LabellingSyntax", "link" : "treelog\/LogTreeSyntax.html#LabellingSyntax[V]extendsAnyRef", "kind" : "implicit class"}, {"label" : "TraversableMonadSyntax", "tail" : "", "member" : "treelog.LogTreeSyntax.TraversableMonadSyntax", "link" : "treelog\/LogTreeSyntax.html#TraversableMonadSyntax[F[_],V]extendsAnyRef", "kind" : "implicit class"}, {"label" : "FoldSyntax", "tail" : "", "member" : "treelog.LogTreeSyntax.FoldSyntax", "link" : "treelog\/LogTreeSyntax.html#FoldSyntax[V]extendsAnyRef", "kind" : "implicit class"}, {"label" : "BranchLabelingSyntax", "tail" : "", "member" : "treelog.LogTreeSyntax.BranchLabelingSyntax", "link" : "treelog\/LogTreeSyntax.html#BranchLabelingSyntaxextendsAnyRef", "kind" : "implicit class"}, {"label" : "EitherSyntax", "tail" : "", "member" : "treelog.LogTreeSyntax.EitherSyntax", "link" : "treelog\/LogTreeSyntax.html#EitherSyntax[V]extendsAnyRef", "kind" : "implicit class"}, {"label" : "OptionSyntax", "tail" : "", "member" : "treelog.LogTreeSyntax.OptionSyntax", "link" : "treelog\/LogTreeSyntax.html#OptionSyntax[V]extendsAnyRef", "kind" : "implicit class"}, {"label" : "BooleanSyntax", "tail" : "", "member" : "treelog.LogTreeSyntax.BooleanSyntax", "link" : "treelog\/LogTreeSyntax.html#BooleanSyntaxextendsAnyRef", "kind" : "implicit class"}, {"label" : "AnnotationsSyntax", "tail" : "", "member" : "treelog.LogTreeSyntax.AnnotationsSyntax", "link" : "treelog\/LogTreeSyntax.html#AnnotationsSyntax[V]extendsAnyRef", "kind" : "implicit class"}, {"label" : "LeafSyntax", "tail" : "", "member" : "treelog.LogTreeSyntax.LeafSyntax", "link" : "treelog\/LogTreeSyntax.html#LeafSyntax[V]extendsAnyRef", "kind" : "implicit class"}, {"label" : "DescribedComputationTSyntax", "tail" : "", "member" : "treelog.LogTreeSyntaxWithoutAnnotations.DescribedComputationTSyntax", "link" : "treelog\/LogTreeSyntaxWithoutAnnotations$.html#DescribedComputationTSyntax[F[_],A]extendsAnyRef", "kind" : "implicit class"}, {"label" : "describedComputationTEqual", "tail" : "(arg0: Monad[F], F0: Equal[F[DescribedComputation[A]]]): Equal[DescribedComputationT[F, A]]", "member" : "treelog.LogTreeSyntaxWithoutAnnotations.describedComputationTEqual", "link" : "treelog\/LogTreeSyntaxWithoutAnnotations$.html#describedComputationTEqual[F[_],A](implicitevidence$3:scalaz.Monad[F],implicitF0:scalaz.Equal[F[treelog.LogTreeSyntaxWithoutAnnotations.DescribedComputation[A]]]):scalaz.Equal[treelog.LogTreeSyntaxWithoutAnnotations.DescribedComputationT[F,A]]", "kind" : "implicit def"}, {"label" : "dcTrans", "tail" : ": Hoist[DescribedComputationT]", "member" : "treelog.LogTreeSyntaxWithoutAnnotations.dcTrans", "link" : "treelog\/LogTreeSyntaxWithoutAnnotations$.html#dcTrans:scalaz.Hoist[treelog.LogTreeSyntaxWithoutAnnotations.DescribedComputationT]", "kind" : "implicit val"}, {"label" : "describedComputationTMonad", "tail" : "(F0: Monad[F]): Monad[[β$1$]DescribedComputationT[F, β$1$]]", "member" : "treelog.LogTreeSyntaxWithoutAnnotations.describedComputationTMonad", "link" : "treelog\/LogTreeSyntaxWithoutAnnotations$.html#describedComputationTMonad[F[_]](implicitF0:scalaz.Monad[F]):scalaz.Monad[[β$1$]treelog.LogTreeSyntaxWithoutAnnotations.DescribedComputationT[F,β$1$]]", "kind" : "implicit def"}, {"label" : "DescribedComputationT", "tail" : "", "member" : "treelog.LogTreeSyntaxWithoutAnnotations.DescribedComputationT", "link" : "treelog\/LogTreeSyntaxWithoutAnnotations$.html#DescribedComputationT[F[_],A]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "NothingShow", "tail" : "", "member" : "treelog.LogTreeSyntaxWithoutAnnotations.NothingShow", "link" : "treelog\/LogTreeSyntaxWithoutAnnotations$.html#NothingShow", "kind" : "implicit object"}, {"label" : "fromSerializableForm", "tail" : "(sdc: SerializableDescribedComputation[V]): DescribedComputation[V]", "member" : "treelog.LogTreeSyntax.fromSerializableForm", "link" : "treelog\/LogTreeSyntaxWithoutAnnotations$.html#fromSerializableForm[V](sdc:LogTreeSyntax.this.SerializableDescribedComputation[V]):LogTreeSyntax.this.DescribedComputation[V]", "kind" : "def"}, {"label" : "toSerializableForm", "tail" : "(dc: DescribedComputation[V]): SerializableDescribedComputation[V]", "member" : "treelog.LogTreeSyntax.toSerializableForm", "link" : "treelog\/LogTreeSyntaxWithoutAnnotations$.html#toSerializableForm[V](dc:LogTreeSyntax.this.DescribedComputation[V]):LogTreeSyntax.this.SerializableDescribedComputation[V]", "kind" : "def"}, {"label" : "SerializableDescribedComputation", "tail" : "", "member" : "treelog.LogTreeSyntax.SerializableDescribedComputation", "link" : "treelog\/LogTreeSyntaxWithoutAnnotations$.html#SerializableDescribedComputation[V]=(String\\\/V,treelog.SerializableTree[Annotation])", "kind" : "type"}, {"label" : "logTreeShow", "tail" : "(annotationShow: Show[Nothing]): Show[LogTree]", "member" : "treelog.LogTreeSyntax.logTreeShow", "link" : "treelog\/LogTreeSyntaxWithoutAnnotations$.html#logTreeShow(implicitannotationShow:scalaz.Show[Annotation]):scalaz.Show[LogTreeSyntax.this.LogTree]", "kind" : "implicit def"}, {"label" : "success", "tail" : "(value: V): DescribedComputation[V]", "member" : "treelog.LogTreeSyntax.success", "link" : "treelog\/LogTreeSyntaxWithoutAnnotations$.html#success[V](value:V):LogTreeSyntax.this.DescribedComputation[V]", "kind" : "def"}, {"label" : "success", "tail" : "(value: V, description: String): DescribedComputation[V]", "member" : "treelog.LogTreeSyntax.success", "link" : "treelog\/LogTreeSyntaxWithoutAnnotations$.html#success[V](value:V,description:String):LogTreeSyntax.this.DescribedComputation[V]", "kind" : "def"}, {"label" : "failure", "tail" : "(description: String): DescribedComputation[V]", "member" : "treelog.LogTreeSyntax.failure", "link" : "treelog\/LogTreeSyntaxWithoutAnnotations$.html#failure[V](description:String):LogTreeSyntax.this.DescribedComputation[V]", "kind" : "def"}, {"label" : "failureLog", "tail" : "(dc: DescribedComputation[V]): DescribedComputation[V]", "member" : "treelog.LogTreeSyntax.failureLog", "link" : "treelog\/LogTreeSyntaxWithoutAnnotations$.html#failureLog[V](dc:LogTreeSyntax.this.DescribedComputation[V]):LogTreeSyntax.this.DescribedComputation[V]", "kind" : "def"}, {"label" : "logTreeMonoid", "tail" : ": Monoid[LogTree] { val zero: treelog.LogTreeSyntaxWithoutAnnotations.LogTree }", "member" : "treelog.LogTreeSyntax.logTreeMonoid", "link" : "treelog\/LogTreeSyntaxWithoutAnnotations$.html#logTreeMonoid:scalaz.Monoid[LogTreeSyntax.this.LogTree]{valzero:LogTreeSyntax.this.LogTree}", "kind" : "implicit val"}, {"label" : "DescribedComputation", "tail" : "", "member" : "treelog.LogTreeSyntax.DescribedComputation", "link" : "treelog\/LogTreeSyntaxWithoutAnnotations$.html#DescribedComputation[V]=scalaz.EitherT[LogTreeSyntax.this.LogTreeWriter,String,V]", "kind" : "type"}, {"label" : "LogTreeWriter", "tail" : "", "member" : "treelog.LogTreeSyntax.LogTreeWriter", "link" : "treelog\/LogTreeSyntaxWithoutAnnotations$.html#LogTreeWriter[V]=scalaz.Writer[LogTreeSyntax.this.LogTree,V]", "kind" : "type"}, {"label" : "LogTree", "tail" : "", "member" : "treelog.LogTreeSyntax.LogTree", "link" : "treelog\/LogTreeSyntaxWithoutAnnotations$.html#LogTree=scalaz.Tree[treelog.LogTreeLabel[Annotation]]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "treelog\/LogTreeSyntaxWithoutAnnotations$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "treelog\/LogTreeSyntaxWithoutAnnotations$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "treelog\/LogTreeSyntaxWithoutAnnotations$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "treelog\/LogTreeSyntaxWithoutAnnotations$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "treelog\/LogTreeSyntaxWithoutAnnotations$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "treelog\/LogTreeSyntaxWithoutAnnotations$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "treelog\/LogTreeSyntaxWithoutAnnotations$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "treelog\/LogTreeSyntaxWithoutAnnotations$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "treelog\/LogTreeSyntaxWithoutAnnotations$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "treelog\/LogTreeSyntaxWithoutAnnotations$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "treelog\/LogTreeSyntaxWithoutAnnotations$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "treelog\/LogTreeSyntaxWithoutAnnotations$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "treelog\/LogTreeSyntaxWithoutAnnotations$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "treelog\/LogTreeSyntaxWithoutAnnotations$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "treelog\/LogTreeSyntaxWithoutAnnotations$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "treelog\/LogTreeSyntaxWithoutAnnotations$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "treelog\/LogTreeSyntaxWithoutAnnotations$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "treelog\/LogTreeSyntaxWithoutAnnotations$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "treelog\/LogTreeSyntaxWithoutAnnotations$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "treelog.SerializableTree", "shortDescription" : "", "members_case class" : [{"member" : "treelog.SerializableTree#<init>", "error" : "unsupported entity"}, {"label" : "children", "tail" : ": List[SerializableTree[Annotation]]", "member" : "treelog.SerializableTree.children", "link" : "treelog\/SerializableTree.html#children:List[treelog.SerializableTree[Annotation]]", "kind" : "val"}, {"label" : "label", "tail" : ": LogTreeLabel[Annotation]", "member" : "treelog.SerializableTree.label", "link" : "treelog\/SerializableTree.html#label:treelog.LogTreeLabel[Annotation]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "treelog\/SerializableTree.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "treelog\/SerializableTree.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "treelog\/SerializableTree.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "treelog\/SerializableTree.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "treelog\/SerializableTree.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "treelog\/SerializableTree.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "treelog\/SerializableTree.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "treelog\/SerializableTree.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "treelog\/SerializableTree.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "treelog\/SerializableTree.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "treelog\/SerializableTree.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "treelog\/SerializableTree.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "treelog\/SerializableTree.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "treelog\/SerializableTree.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "treelog\/SerializableTree.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "treelog\/SerializableTree.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "treelog\/SerializableTree.html", "kind" : "case class"}, {"name" : "treelog.UndescribedLogTreeLabel", "shortDescription" : "", "members_case class" : [{"label" : "fold", "tail" : "(f: (DescribedLogTreeLabel[Annotation]) ⇒ T, g: (UndescribedLogTreeLabel[Annotation]) ⇒ T): T", "member" : "treelog.UndescribedLogTreeLabel.fold", "link" : "treelog\/UndescribedLogTreeLabel.html#fold[T](f:treelog.DescribedLogTreeLabel[Annotation]=>T,g:treelog.UndescribedLogTreeLabel[Annotation]=>T):T", "kind" : "def"}, {"member" : "treelog.UndescribedLogTreeLabel#<init>", "error" : "unsupported entity"}, {"label" : "annotations", "tail" : ": Set[Annotation]", "member" : "treelog.UndescribedLogTreeLabel.annotations", "link" : "treelog\/UndescribedLogTreeLabel.html#annotations:Set[Annotation]", "kind" : "val"}, {"label" : "success", "tail" : ": Boolean", "member" : "treelog.UndescribedLogTreeLabel.success", "link" : "treelog\/UndescribedLogTreeLabel.html#success:Boolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "treelog\/UndescribedLogTreeLabel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "treelog\/UndescribedLogTreeLabel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "treelog\/UndescribedLogTreeLabel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "treelog\/UndescribedLogTreeLabel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "treelog\/UndescribedLogTreeLabel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "treelog\/UndescribedLogTreeLabel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "treelog\/UndescribedLogTreeLabel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "treelog\/UndescribedLogTreeLabel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "treelog\/UndescribedLogTreeLabel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "treelog\/UndescribedLogTreeLabel.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "treelog\/UndescribedLogTreeLabel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "treelog\/UndescribedLogTreeLabel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "treelog\/UndescribedLogTreeLabel.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "treelog\/UndescribedLogTreeLabel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "treelog\/UndescribedLogTreeLabel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "treelog\/UndescribedLogTreeLabel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "treelog\/UndescribedLogTreeLabel.html", "kind" : "case class"}]};